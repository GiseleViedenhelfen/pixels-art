{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-02-18T20:22:53.580Z",
    "end": "2022-02-18T20:24:15.945Z",
    "duration": 82365,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "05ea0c41-b436-4672-b167-0b4707ed68ec",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4f44989f-a619-4bb9-8933-e102147f414f",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "be713cd5-b51f-4bb8-bb05-ad1f032e0bc7",
              "parentUUID": "4f44989f-a619-4bb9-8933-e102147f414f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be713cd5-b51f-4bb8-bb05-ad1f032e0bc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 311,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 291,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "9de6cd96-1072-44b7-819a-063d93ae1da6",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "623bcbee-7e43-44a5-9908-dabf3dc1c023",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 278,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "1089ae8a-7b35-45ee-b27d-ca6451bae20c",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 170,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "f21f494a-6b85-4a95-86d7-3b3ad035eaa5",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 126,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "c8e1da9f-0685-4441-8693-0314a07c4d49",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "aea3e3e9-6cd9-4d15-9b70-e00ba4694b1b",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 139,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "c5d763cb-ddb9-43e7-bddb-83fc8a7c26a3",
              "parentUUID": "6314090f-9f5e-4174-8c2d-58737dacbbd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9de6cd96-1072-44b7-819a-063d93ae1da6",
            "623bcbee-7e43-44a5-9908-dabf3dc1c023",
            "1089ae8a-7b35-45ee-b27d-ca6451bae20c",
            "f21f494a-6b85-4a95-86d7-3b3ad035eaa5",
            "c8e1da9f-0685-4441-8693-0314a07c4d49",
            "aea3e3e9-6cd9-4d15-9b70-e00ba4694b1b",
            "c5d763cb-ddb9-43e7-bddb-83fc8a7c26a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1344,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9d707024-f690-439a-b76b-84ec07db5de3",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "92b7f678-d951-4e34-9625-c26058d7fde8",
              "parentUUID": "9d707024-f690-439a-b76b-84ec07db5de3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 254,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "f79aa7a1-3f0c-4693-a127-54ab0f9f4e5a",
              "parentUUID": "9d707024-f690-439a-b76b-84ec07db5de3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92b7f678-d951-4e34-9625-c26058d7fde8",
            "f79aa7a1-3f0c-4693-a127-54ab0f9f4e5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "dab15373-1ed2-4b05-aa0c-7eff41aa5316",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "46d3e25a-9530-46c0-b9b3-5d9d35aae42b",
              "parentUUID": "dab15373-1ed2-4b05-aa0c-7eff41aa5316",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "b0ad7f19-b923-45ab-bd33-4955163c09f6",
              "parentUUID": "dab15373-1ed2-4b05-aa0c-7eff41aa5316",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 210,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "e4d738d4-e9ee-48b2-8ede-62685c1d32e1",
              "parentUUID": "dab15373-1ed2-4b05-aa0c-7eff41aa5316",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "343707ec-207d-4b22-b339-a56821c02be4",
              "parentUUID": "dab15373-1ed2-4b05-aa0c-7eff41aa5316",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46d3e25a-9530-46c0-b9b3-5d9d35aae42b",
            "b0ad7f19-b923-45ab-bd33-4955163c09f6",
            "e4d738d4-e9ee-48b2-8ede-62685c1d32e1",
            "343707ec-207d-4b22-b339-a56821c02be4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 596,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c74b0492-face-42f6-bdcc-647f53d651b0",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 358,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a5f1ed44-89d0-4db1-8031-34a62f9c9157",
              "parentUUID": "c74b0492-face-42f6-bdcc-647f53d651b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "3eb9505b-1cb6-4315-92b3-2055e2630333",
              "parentUUID": "c74b0492-face-42f6-bdcc-647f53d651b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5f1ed44-89d0-4db1-8031-34a62f9c9157",
            "3eb9505b-1cb6-4315-92b3-2055e2630333"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 632,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ef1b7551-c686-474d-b2f4-e59d37658813",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 149,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "ef059630-4b9b-44f4-92cf-8934b12c9a2e",
              "parentUUID": "ef1b7551-c686-474d-b2f4-e59d37658813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "dda7bc9c-5634-486e-b4ef-bb740b3d77df",
              "parentUUID": "ef1b7551-c686-474d-b2f4-e59d37658813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef059630-4b9b-44f4-92cf-8934b12c9a2e",
            "dda7bc9c-5634-486e-b4ef-bb740b3d77df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 258,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1296f08b-72ac-4a35-b027-9bdcf6463127",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "dded1518-afb1-4183-affb-06a6d5fdc00a",
              "parentUUID": "1296f08b-72ac-4a35-b027-9bdcf6463127",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8747,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "cf288f92-72b8-4ad8-934f-1477fc1a2e85",
              "parentUUID": "1296f08b-72ac-4a35-b027-9bdcf6463127",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dded1518-afb1-4183-affb-06a6d5fdc00a",
            "cf288f92-72b8-4ad8-934f-1477fc1a2e85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9229,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "153d7d2c-b302-4d4d-86c7-5dee101ead5d",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2233,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "9d275bad-7a4b-4bf1-b883-7c6e80fdf22c",
              "parentUUID": "153d7d2c-b302-4d4d-86c7-5dee101ead5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8611,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "09c343e2-c1b3-4f2a-b8fe-af780f26fb80",
              "parentUUID": "153d7d2c-b302-4d4d-86c7-5dee101ead5d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1292,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "dc389473-6516-4f51-a682-0a7f09696762",
              "parentUUID": "153d7d2c-b302-4d4d-86c7-5dee101ead5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d275bad-7a4b-4bf1-b883-7c6e80fdf22c",
            "09c343e2-c1b3-4f2a-b8fe-af780f26fb80",
            "dc389473-6516-4f51-a682-0a7f09696762"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1529a109-340e-428c-b86a-b95db204d7e5",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 193,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "43160248-e960-47ac-903e-83892d95d678",
              "parentUUID": "1529a109-340e-428c-b86a-b95db204d7e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "3cbadd8c-0c41-4beb-aa82-7d9a336e260a",
              "parentUUID": "1529a109-340e-428c-b86a-b95db204d7e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "84955d20-407d-4a07-9cb5-e09d57e4eb90",
              "parentUUID": "1529a109-340e-428c-b86a-b95db204d7e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2444,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "389bc7ca-6dfb-4735-ad75-45d3f3f3a284",
              "parentUUID": "1529a109-340e-428c-b86a-b95db204d7e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43160248-e960-47ac-903e-83892d95d678",
            "3cbadd8c-0c41-4beb-aa82-7d9a336e260a",
            "84955d20-407d-4a07-9cb5-e09d57e4eb90",
            "389bc7ca-6dfb-4735-ad75-45d3f3f3a284"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4459,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a52d93e1-e31f-47c8-86d1-811619b79537",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4408,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "40c26554-8b19-4edb-82f3-ed7e8cc08494",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4362,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cfe322ff-8c66-4f33-9b31-c317dafa2b36",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4351,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "af94f324-8c9f-4dda-886a-4dd5b7a4d362",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4374,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "17b9b456-c518-43c1-85f4-3e0002766dac",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4391,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3903c912-4772-47d1-b466-cd237d2940cf",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4338,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8fa8a570-a1bb-42cf-9f2f-35e6a73007db",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4363,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a9f47061-5506-456a-b6b7-5e940f1e9106",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4331,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4b97d13c-1376-4e27-912c-ba1bfc6df090",
              "parentUUID": "29e15faa-90ca-4863-8f0e-ea1b0c464006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "a52d93e1-e31f-47c8-86d1-811619b79537",
            "40c26554-8b19-4edb-82f3-ed7e8cc08494",
            "cfe322ff-8c66-4f33-9b31-c317dafa2b36",
            "af94f324-8c9f-4dda-886a-4dd5b7a4d362",
            "17b9b456-c518-43c1-85f4-3e0002766dac",
            "3903c912-4772-47d1-b466-cd237d2940cf",
            "8fa8a570-a1bb-42cf-9f2f-35e6a73007db",
            "a9f47061-5506-456a-b6b7-5e940f1e9106",
            "4b97d13c-1376-4e27-912c-ba1bfc6df090"
          ],
          "pending": [],
          "skipped": [],
          "duration": 39377,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "37f4332c-3fdb-4d16-abd6-9b2c2e0c8e6f",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4359,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "12666630-5c29-463a-9190-dcd8ae697396",
              "parentUUID": "37f4332c-3fdb-4d16-abd6-9b2c2e0c8e6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4402,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "db1d4069-ced9-459f-a8d9-55fe3617a14c",
              "parentUUID": "37f4332c-3fdb-4d16-abd6-9b2c2e0c8e6f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4325,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:33579/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:33579/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:33579/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:33579/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:33579/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:33579/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "38b390f4-f4c7-4d74-90c3-1ee3568a6c65",
              "parentUUID": "37f4332c-3fdb-4d16-abd6-9b2c2e0c8e6f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "12666630-5c29-463a-9190-dcd8ae697396",
            "db1d4069-ced9-459f-a8d9-55fe3617a14c",
            "38b390f4-f4c7-4d74-90c3-1ee3568a6c65"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13086,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "816a8619-1156-43fa-b2ed-05b352fd33f0",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 497,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33579/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33579/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33579/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33579/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33579/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33579/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33579/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4da57b24-d947-4b3a-a2d3-b955a0578568",
              "parentUUID": "816a8619-1156-43fa-b2ed-05b352fd33f0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 534,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:33579/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:33579/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:33579/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:33579/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:33579/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:33579/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:33579/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:33579/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:33579/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:33579/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:33579/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:33579/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "4d0383a5-1b5a-4a20-a9ce-f71ca62c7b01",
              "parentUUID": "816a8619-1156-43fa-b2ed-05b352fd33f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4da57b24-d947-4b3a-a2d3-b955a0578568",
            "4d0383a5-1b5a-4a20-a9ce-f71ca62c7b01"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1031,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}